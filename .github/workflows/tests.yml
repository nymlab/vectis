name: Test, Lint and Build Checker

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  contract-multi-test:
    name: Contract Multitests
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Cinstrument-coverage"
      LLVM_PROFILE_FILE: "vectis-%p-%m.profraw"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install Coverage Dependencies
        run: |
          cargo install grcov
          rustup component add llvm-tools-preview

      - name: Download passkey-cli repo
        uses: actions/checkout@v4
        with:
          repository: nymlab/passkey-cli
          path: ./passkey-cli
          ref: main
          token: ${{ secrets.GH_TOKEN }}

      - name: Install passkey-cli
        run: |
          cd ./passkey-cli
          cargo build --release
          cp target/release/passkey-cli ../packages/vectis-tests
          cd ../

      - name: Run cw-multi-test contract tests
        run: cargo test -p vectis-contract-tests -- unit_tests
        env:
          RUST_BACKTRACE: 1

      - name: Run contract unit tests
        run: cargo test --workspace --exclude vectis-contract-tests
        env:
          RUST_BACKTRACE: 1

      - name: Generate LCOV Report
        run: grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing -o ./lcov.info

      - name: Upload Coverage
        run: bash <(curl -s https://codecov.io/bash) -f lcov.info

  build-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Compile WASM contract plugin registry
        run: cargo wasm-plugin-registry --locked
        env:
          RUSTFLAGS: "-C link-arg=-s"

      - name: Compile WASM contract proxy
        run: cargo wasm-proxy --locked
        env:
          RUSTFLAGS: "-C link-arg=-s"

      - name: Compile WASM contract factory
        run: cargo wasm-factory --locked
        env:
          RUSTFLAGS: "-C link-arg=-s"

      - name: Compile WASM contract authenticator
        run: cargo wasm-auth --locked
        env:
          RUSTFLAGS: "-C link-arg=-s"

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings
