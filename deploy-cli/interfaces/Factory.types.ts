/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Binary = string;
export type AuthenticatorType =
    | ("cosmos_e_o_a" | "ethereum_e_o_a" | "webauthn")
    | {
          other: string;
      };
export type Uint128 = string;
export interface InstantiateMsg {
    msg: WalletFactoryInstantiateMsg;
    [k: string]: unknown;
}
export interface WalletFactoryInstantiateMsg {
    authenticators?: AuthenticatorInstInfo[] | null;
    proxy_code_id: number;
    wallet_fee: Coin;
}
export interface AuthenticatorInstInfo {
    code_id: number;
    inst_msg: Binary;
    ty: AuthenticatorType;
}
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export type ExecuteMsg = FactoryManagementTraitExecMsg | FactoryServiceTraitExecMsg | ExecMsg;
export type FactoryManagementTraitExecMsg =
    | {
          update_code_id: {
              new_code_id: number;
              ty: CodeIdType;
              [k: string]: unknown;
          };
      }
    | {
          update_config_fee: {
              new_fee: Coin;
              ty: FeeType;
              [k: string]: unknown;
          };
      }
    | {
          update_deployer: {
              addr: string;
              [k: string]: unknown;
          };
      };
export type CodeIdType = "proxy";
export type FeeType = "wallet";
export type FactoryServiceTraitExecMsg =
    | {
          create_wallet: {
              create_wallet_msg: CreateWalletMsg;
              [k: string]: unknown;
          };
      }
    | {
          migrate_wallet: {
              migrations_msg: MigrateWalletMsg;
              [k: string]: unknown;
          };
      };
export type AuthenticatorProvider =
    | "vectis"
    | {
          custom: string;
      };
export type PluginPermissions = "exec" | "pre_tx_check" | "post_tx_hook";
export type PluginSource =
    | {
          vectis_registry: number;
      }
    | {
          code_id: [number, string];
      };
export type ExecMsg = string;
export interface CreateWalletMsg {
    controller: Entity;
    initial_data: [Binary, Binary][];
    label: string;
    plugins: PluginInstallParams[];
    proxy_initial_funds: Coin[];
    relayers: string[];
}
export interface Entity {
    auth: Authenticator;
    data: Binary;
    nonce: number;
}
export interface Authenticator {
    provider: AuthenticatorProvider;
    ty: AuthenticatorType;
}
export interface PluginInstallParams {
    funds: Coin[];
    instantiate_msg: Binary;
    label: string;
    plugin_params: PluginParams;
    src: PluginSource;
}
export interface PluginParams {
    permission: PluginPermissions;
}
export interface MigrateWalletMsg {
    addr_to_migrate: string;
    tx: RelayTransaction;
}
export interface RelayTransaction {
    message: Binary;
    signature: Binary;
}
export type QueryMsg = FactoryManagementTraitQueryMsg | FactoryServiceTraitQueryMsg | QueryMsg1;
export type FactoryManagementTraitQueryMsg =
    | {
          total_created: {
              [k: string]: unknown;
          };
      }
    | {
          code_id: {
              ty: CodeIdType;
              [k: string]: unknown;
          };
      }
    | {
          fees: {
              [k: string]: unknown;
          };
      }
    | {
          auth_provider_addr: {
              ty: AuthenticatorType;
              [k: string]: unknown;
          };
      };
export type FactoryServiceTraitQueryMsg = {
    wallet_by_label: {
        label: string;
        [k: string]: unknown;
    };
};
export type QueryMsg1 = string;
export type NullableAddr = Addr | null;
export type Addr = string;
export type Uint64 = number;
export interface FeesResponse {
    wallet_fee: Coin;
}
