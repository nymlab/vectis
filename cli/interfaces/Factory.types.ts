/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.26.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Uint128 = string;
export interface InstantiateMsg {
    addr_prefix: string;
    proxy_code_id: number;
    proxy_multisig_code_id: number;
    wallet_fee: Coin;
}
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export type ExecuteMsg =
    | {
          create_wallet: {
              create_wallet_msg: CreateWalletMsg;
          };
      }
    | {
          migrate_wallet: {
              migration_msg: ProxyMigrationTxMsg;
              wallet_address: WalletAddr;
          };
      }
    | {
          update_code_id: {
              new_code_id: number;
              type: CodeIdType;
          };
      }
    | {
          update_config_fee: {
              new_fee: Coin;
              type: FeeType;
          };
      }
    | {
          update_deployer: {
              addr: string;
          };
      }
    | {
          update_controller: {
              new_controller: Addr;
              old_controller: Addr;
          };
      }
    | {
          update_guardians: {
              new_guardians: Addr[];
              old_guardians: Addr[];
          };
      };
export type Addr = string;
export type ProxyMigrationTxMsg =
    | {
          relay_tx: RelayTransaction;
      }
    | {
          direct_migration_msg: Binary;
      };
export type Binary = string;
export type WalletAddr =
    | {
          canonical: CanonicalAddr;
      }
    | {
          addr: Addr;
      };
export type CanonicalAddr = Binary;
export type CodeIdType = "proxy" | "multisig";
export type FeeType = "wallet";
export interface CreateWalletMsg {
    controller_addr: string;
    guardians: Guardians;
    label: string;
    proxy_initial_funds: Coin[];
    relayers: string[];
}
export interface Guardians {
    addresses: Addr[];
    guardians_multisig?: MultiSig | null;
}
export interface MultiSig {
    threshold_absolute_count: number;
}
export interface RelayTransaction {
    controller_pubkey: Binary;
    message: Binary;
    nonce: number;
    signature: Binary;
}
export type QueryMsg =
    | {
          total_created: {};
      }
    | {
          code_id: {
              ty: CodeIdType;
          };
      }
    | {
          fees: {};
      }
    | {
          deployer_addr: {};
      }
    | {
          controller_wallets: {
              controller: Addr;
          };
      }
    | {
          wallets_with_guardian: {
              guardian: Addr;
          };
      };
export type Uint64 = number;
export type ArrayOfAddr = Addr[];
export interface FeesResponse {
    wallet_fee: Coin;
}
