/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { Binary, AuthenticatorType, ChainConnection, Uint128, InstantiateMsg, WalletFactoryInstantiateMsg, AuthenticatorInstInfo, Coin, ExecuteMsg, FactoryManagementTraitExecMsg, CodeIdType, FeeType, FactoryServiceTraitExecMsg, AuthenticatorProvider, PluginPermission, PluginSource, ExecMsg, CreateWalletMsg, Entity, Authenticator, PluginInstallParams, MigrateWalletMsg, RelayTransaction, QueryMsg, FactoryManagementTraitQueryMsg, FactoryServiceTraitQueryMsg, QueryMsg1, NullableAddr, Addr, ContractVersion, Uint64, FeesResponse, ArrayOfTupleOfStringAndChainConnection, ArrayOfTupleOfUint64AndString, NullableString } from "../types/factory.type";
import { CamelCasedProperties } from "type-fest";
export abstract class FactoryExecuteMsgBuilder {
  static updateCodeId = ({
    codeId,
    setAsDefault,
    ty,
    version
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_code_id: unknown;
  }>["update_code_id"]>): ExecuteMsg => {
    return {
      update_code_id: ({
        code_id: codeId,
        set_as_default: setAsDefault,
        ty,
        version
      } as const)
    };
  };
  static updateConfigFee = ({
    newFee,
    ty
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_config_fee: unknown;
  }>["update_config_fee"]>): ExecuteMsg => {
    return {
      update_config_fee: ({
        new_fee: newFee,
        ty
      } as const)
    };
  };
  static updateSupportedInterchain = ({
    chainConnection,
    chainId
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_supported_interchain: unknown;
  }>["update_supported_interchain"]>): ExecuteMsg => {
    return {
      update_supported_interchain: ({
        chain_connection: chainConnection,
        chain_id: chainId
      } as const)
    };
  };
  static updateDeployer = ({
    addr
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_deployer: unknown;
  }>["update_deployer"]>): ExecuteMsg => {
    return {
      update_deployer: ({
        addr
      } as const)
    };
  };
  static updateWalletCreator = ({
    addr
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_wallet_creator: unknown;
  }>["update_wallet_creator"]>): ExecuteMsg => {
    return {
      update_wallet_creator: ({
        addr
      } as const)
    };
  };
  static updateAuthProvider = ({
    newCodeId,
    newInstMsg,
    ty
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_auth_provider: unknown;
  }>["update_auth_provider"]>): ExecuteMsg => {
    return {
      update_auth_provider: ({
        new_code_id: newCodeId,
        new_inst_msg: newInstMsg,
        ty
      } as const)
    };
  };
  static createWallet = ({
    createWalletMsg
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    create_wallet: unknown;
  }>["create_wallet"]>): ExecuteMsg => {
    return {
      create_wallet: ({
        create_wallet_msg: createWalletMsg
      } as const)
    };
  };
  static migrateWallet = ({
    migrationsMsg
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    migrate_wallet: unknown;
  }>["migrate_wallet"]>): ExecuteMsg => {
    return {
      migrate_wallet: ({
        migrations_msg: migrationsMsg
      } as const)
    };
  };
}
export abstract class FactoryQueryMsgBuilder {
  static totalCreated = (): QueryMsg => {
    return {
      total_created: ({} as const)
    };
  };
  static defaultProxyCodeId = (): QueryMsg => {
    return {
      default_proxy_code_id: ({} as const)
    };
  };
  static deployer = (): QueryMsg => {
    return {
      deployer: ({} as const)
    };
  };
  static walletCreator = (): QueryMsg => {
    return {
      wallet_creator: ({} as const)
    };
  };
  static supportedChains = ({
    limit,
    startAfter
  }: CamelCasedProperties<Extract<QueryMsg, {
    supported_chains: unknown;
  }>["supported_chains"]>): QueryMsg => {
    return {
      supported_chains: ({
        limit,
        start_after: startAfter
      } as const)
    };
  };
  static supportedProxies = ({
    limit,
    startAfter
  }: CamelCasedProperties<Extract<QueryMsg, {
    supported_proxies: unknown;
  }>["supported_proxies"]>): QueryMsg => {
    return {
      supported_proxies: ({
        limit,
        start_after: startAfter
      } as const)
    };
  };
  static fees = (): QueryMsg => {
    return {
      fees: ({} as const)
    };
  };
  static authProviderAddr = ({
    ty
  }: CamelCasedProperties<Extract<QueryMsg, {
    auth_provider_addr: unknown;
  }>["auth_provider_addr"]>): QueryMsg => {
    return {
      auth_provider_addr: ({
        ty
      } as const)
    };
  };
  static contractVersion = (): QueryMsg => {
    return {
      contract_version: ({} as const)
    };
  };
  static walletByVid = ({
    vid
  }: CamelCasedProperties<Extract<QueryMsg, {
    wallet_by_vid: unknown;
  }>["wallet_by_vid"]>): QueryMsg => {
    return {
      wallet_by_vid: ({
        vid
      } as const)
    };
  };
  static walletByVidChain = ({
    chainId,
    vid
  }: CamelCasedProperties<Extract<QueryMsg, {
    wallet_by_vid_chain: unknown;
  }>["wallet_by_vid_chain"]>): QueryMsg => {
    return {
      wallet_by_vid_chain: ({
        chain_id: chainId,
        vid
      } as const)
    };
  };
}