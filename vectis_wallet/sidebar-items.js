window.SIDEBAR_ITEMS = {"constant":[["DEFAULT_LIMIT",""],["GOVEC_CLAIM_DURATION_DAY_MUL","Time allowed for controller to claim their Govec"],["GOVEC_REPLY_ID","Dao Chain govec contract reply"],["GUARDIAN_REQUEST_ACTIVATION_TIME","Min delay time is set to 1 day"],["IBC_APP_ORDER",""],["IBC_APP_VERSION",""],["MAX_LIMIT",""],["PACKET_LIFETIME",""]],"enum":[["CodeIdType",""],["DaoTunnelPacketMsg","The IBC Packet Msg allowed dispatched by dao-tunnel"],["FactoryError",""],["FeeType",""],["GovecExecuteMsg",""],["GovecQueryMsg",""],["IbcError",""],["Logo","This is used for uploading logo data, or setting it in InstantiateData"],["MigrationMsgError","Contract migration related errors"],["ProposalExecuteMsg",""],["ProposeMessage",""],["ProxyExecuteMsg",""],["ProxyMigrationTxMsg",""],["ProxyQueryMsg",""],["RelayTxError","Relay transaction related errors"],["RemoteTunnelExecuteMsg",""],["RemoteTunnelPacketMsg","The IBC Packet Msg allowed dispatched by remote-tunnel"],["StakeExecuteMsg",""],["StdAck","This is a generic ICS acknowledgement format. Proto defined here: https://github.com/cosmos/cosmos-sdk/blob/v0.42.0/proto/ibc/core/channel/v1/channel.proto#L141-L147 If ibc_receive_packet returns Err(), then x/wasm runtime will rollback the state and return an error message in this format"],["UpdateAddrReq",""],["VectisDaoActionIds",""],["WalletAddr","Representation of the wallet address in both form used in migration"],["WalletFactoryExecuteMsg",""],["WalletFactoryQueryMsg",""]],"fn":[["check_ibc_order",""],["check_ibc_version",""],["ensure_enough_native_funds","Ensure controller has sent in enough to cover the fee and the initial proxy balance"],["ensure_is_dao","Ensures provided addr is the state stored DAO"],["ensure_is_enough_claim_fee","Ensure controller has sent in enought funds to cover the claim fee"],["ensure_is_valid_migration_msg",""],["ensure_is_valid_threshold","Ensures provided fixed multisig threshold is valid."],["factory_instantiate",""],["handle_proxy_instantion_reply",""],["pub_key_to_address","Converts controller pubkey into Addr"],["query_verify_cosmos",""]],"mod":[["factory_execute",""],["factory_queries",""],["factory_state",""]],"struct":[["AllAccountsResponse",""],["BalanceResponse",""],["ChainConfig",""],["CreateWalletMsg",""],["Cw20Coin",""],["DaoConfig",""],["DownloadLogoResponse","When we download an embedded logo, we get this response type. We expect a SPA to be able to accept this info and display it."],["FeesResponse",""],["Guardians",""],["GuardiansUpdateMsg","If the `Guardians.guardian_multisig` is given, we will instantiate a new multisig contract. This contract can be an instance of 3 code ids."],["GuardiansUpdateRequest",""],["IbcTransferChannels","Returned when IBC_TRANSFER_MODULES are queried"],["MarketingInfoResponse",""],["MintResponse",""],["MultiSig",""],["PacketMsg",""],["PluginListResponse",""],["PluginParams",""],["ProxyInstantiateMsg",""],["ProxyMigrateMsg",""],["ReceiveIbcResponseMsg","ReceiveIbcResponseMsg should be de/serialized under `Receive()` variant in a ExecuteMsg"],["Receiver",""],["RelayTransaction",""],["TokenInfoResponse",""],["UnclaimedWalletList",""],["WalletFactoryInstantiateMsg",""],["WalletInfo",""]],"type":[["Nonce","Controller nonce"],["PrePropExecuteMsg",""],["ThresholdAbsoluteCount","Declares that a fixed weight of Yes votes is needed to pass. See `ThresholdResponse.AbsoluteCount` in the cw3 spec for details. Only Fixed multisig is supported in this version"]]};